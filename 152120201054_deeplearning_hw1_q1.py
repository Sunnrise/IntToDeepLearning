# -*- coding: utf-8 -*-
"""152120201054_DeepLearning_HW1_Q1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11ML8BujQtKnJNMmkisDk8wuxFHdpjFOs
"""

import cv2
from google.colab.patches import cv2_imshow

#please run the codes one by one and last code print all the images.

#flipping vertically
originalImage1 = cv2.imread("/content/image1.jpg")
originalImage2 = cv2.imread("/content/image2.jpg")


Image1 = cv2.resize(originalImage1, (256,256))
Image2 = cv2.resize(originalImage2, (256,256))




# Flip the image vertically
flipped_img1_vertically = cv2.flip(Image1, 0)
flipped_img2_vertically =cv2.flip(Image2, 0)




# Flip the image horizontally
flipped_img1_horizontally = cv2.flip(flipped_img1_vertically, 1)
flipped_img2_horizontally = cv2.flip(flipped_img2_vertically, 1)

#Rotates images

# Rotates the image1 to left by 90 degree
img1_rotate_90_counterclockwise = cv2.rotate(flipped_img1_horizontally, cv2.ROTATE_90_COUNTERCLOCKWISE)
#cv2_imshow(img1_rotate_90_counterclockwise)

# Rotates the image2 to left by 90 degree
img2_rotate_90_counterclockwise = cv2.rotate(flipped_img2_horizontally, cv2.ROTATE_90_COUNTERCLOCKWISE)
#cv2_imshow(img2_rotate_90_counterclockwise)

# Rotates the image to right by 90 degree
img1_rotate_90_clockwise = cv2.rotate(flipped_img1_horizontally, cv2.ROTATE_90_CLOCKWISE)
#cv2_imshow(img1_rotate_90_clockwise)

# Rotates the image to right by 90 degree
img2_rotate_90_clockwise = cv2.rotate(flipped_img2_horizontally, cv2.ROTATE_90_CLOCKWISE)
#cv2_imshow(img2_rotate_90_clockwise)

# Resizes input image to half by keeping aspect ratio
import cv2

# Read the original image1
original_image1 = cv2.imread("/content/image1.jpg")
Image1 = cv2.resize(original_image1, (256,256))

# Calculate the new dimensions
original_height, original_width = Image1.shape[:2]
new_width = int(original_width / 2)
new_height = int(original_height / 2)

# Resize the image1 while preserving aspect ratio
resized_image1_aspect = cv2.resize(Image1, (new_width, new_height), interpolation=cv2.INTER_AREA)

# Save the resized image
#cv2.imwrite("output.jpg", resized_image1_aspect)
#cv2_imshow(resized_image1_aspect)

import cv2



# Read the original image2
original_image2 = cv2.imread("/content/image2.jpg")
Image2 = cv2.resize(original_image2, (256,256))
# Calculate the new dimensions
original_height, original_width = Image2.shape[:2]
new_width = int(original_width / 2)
new_height = int(original_height / 2)

# Resize the image2 while preserving aspect ratio
resized_image2_aspect = cv2.resize(Image2, (new_width, new_height), interpolation=cv2.INTER_AREA)

# Save the resized image
#cv2_imshow(resized_image2_aspect)

#cropping images by half
import cv2

# Read the original image1
original_image1 = cv2.imread("/content/image1.jpg")
original_image1 = cv2.resize(original_image1, (256,256))
# Get the width and height of the original image1
height, width = original_image1.shape[:2]

# Calculate the coordinates for the left half of the image1
start_x = 0
end_x = width // 2

# Crop the left half of the image
cropped_image1 = original_image1[:, start_x:end_x]

# Save the cropped image
#cv2_imshow(cropped_image1)

# Read the original image
original_image2 = cv2.imread("/content/image2.jpg")
original_image2 = cv2.resize(original_image2, (256,256))
# Get the width and height of the original image
height, width = original_image2.shape[:2]

# Calculate the coordinates for the right half of the image
start_x = width // 2
end_x = width

# Crop the right half of the image
cropped_image2 = original_image2[:, start_x:end_x]

# Save the cropped image
#cv2_imshow(cropped_image2)

# merge these parts for creating new image
import cv2

right_half_image=cropped_image2
left_half_image=cropped_image1

# Ensure both halves have the same height#
height = min(left_half_image.shape[0], right_half_image.shape[0])

# Resize the images to have the same height
left_half_image = cv2.resize(left_half_image, (int(left_half_image.shape[1] * height / left_half_image.shape[0]), height))
right_half_image = cv2.resize(right_half_image, (int(right_half_image.shape[1] * height / right_half_image.shape[0]), height))

merged_image = cv2.hconcat([left_half_image, right_half_image])
#cv2_imshow(merged_image)

print("\n   PRINTING INPUT IMAGES")
cv2_imshow(originalImage1)
print("\n ")
cv2_imshow(originalImage2)
print("\n\n   PRINTING FLIPPED IMAGES")
print("\n flipping images1 vertically")
cv2_imshow(flipped_img1_vertically)
print("\n flipping images2 vertically")
cv2_imshow(flipped_img2_vertically)
print("\n flipping images1_vertical horizontally")
cv2_imshow(flipped_img1_horizontally)
print("\n flipping images2_vertical horizontally")
cv2_imshow(flipped_img2_horizontally)
print("\n ")
print("\n   PRINTING ROTATED IMAGES")

# Rotates the image1 to left by 90 degree
print("\n rotating image1_vertical_horizontal to left by 90 degree")
cv2_imshow(img1_rotate_90_counterclockwise)

# Rotates the image2 to left by 90 degree
print("\n rotating image2_vertical_horizontal to left by 90 degree")
cv2_imshow(img2_rotate_90_counterclockwise)

# Rotates the image to right by 90 degree
print("\n rotating image1_vertical_horizontal to right by 90 degree")
cv2_imshow(img1_rotate_90_clockwise)
print("\n ")
# Rotates the image to right by 90 degree
print("\n rotating image2_vertical_horizontal to right by 90 degree")
cv2_imshow(img2_rotate_90_clockwise)

print("\n   PRINTING ASPECT RATIO INPUT IMAGES")
print("\n printing aspect ratio input image 1")
cv2_imshow(resized_image1_aspect)
print("\n printing aspect ratio input image 2")
cv2_imshow(resized_image2_aspect)
print("\n printing cropped halves and merge images")
cv2_imshow(merged_image)